# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
original_datasets/
phishing attack papers/
venv/
.idea/
# C extensions
*.so
phishing attack papers
# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
/phishing attack papers
/data/dataset_full.csv.arff
/.idea/dbnavigator.xml
/phishing attack papers/Hiding in Plain Sight- The Anatomy of Malicious Pages on Facebook.pdf
/phishing attack papers/useful_papers/IntAnti-Phish- An Intelligent Anti-Phishing Framework Using Backpropagation Neural Network.pdf
/data/legit_urls_complete.csv
/phishing attack papers/Machine_Learning,_Image_Processing,_Network_Securi..._----_(Lexical_Feature_Based_Feature_Selection_and_Phishing_URL_Classificatio...).pdf
/original_datasets/majestic_million.csv
/.idea/misc.xml
/.idea/modules.xml
/phishing attack papers/useful_papers/paper5.2.3.pdf
/phishing attack papers/Paper_45-Machine_Learning_Based_Phishing_Attack.pdf
/.idea/PCS_project.iml
/original_datasets/phishing_dataset_1/Phishing Websites Features.docx
/original_datasets/phishing_1.txt
/original_datasets/phishing_2.txt
/original_datasets/phishing_4.txt
/.idea/inspectionProfiles/profiles_settings.xml
/.idea/inspectionProfiles/Project_Default.xml
/phishing attack papers/useful_papers/SSRN-id3418542.pdf
/original_datasets/phishing_dataset_1/Training Dataset.arff
/.idea/vcs.xml
/original_datasets/verified_online_1.csv
/original_datasets/verified_online_2.csv
/original_datasets/Webpages_Classification_train_data.csv
/.idea/workspace.xml
.idea
